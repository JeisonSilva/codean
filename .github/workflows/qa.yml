name: QA
on:
  push:
    branches:
      - "release/*"
    
    
jobs:

  build:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Configuração do Dotnet
        uses: actions/setup-dotnet@v3
        with:
         dotnet-version: 6.0.x

      - name: Restauração do pacote
        run: dotnet restore ./src

      - name: Build do pacote
        run: dotnet build ./src --no-restore

  testes:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      
      - name: Configuração do Dotnet
        uses: actions/setup-dotnet@v3
        with:
         dotnet-version: 6.0.x

      - name: Testes de unidade
        run: dotnet test ./src --no-build --verbosity normal

  sonarQube:
    needs: build
    name: Build and analyze
    runs-on: windows-latest
    steps:
      - name: Configuração do Dotnet
        uses: actions/setup-dotnet@v3
        with:
         dotnet-version: 6.0.x

      - name: Install dotnet-coverage
        run: dotnet tool install --global dotnet-coverage

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: 1.11
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v3
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          cd src
          ..\.\.sonar\scanner\dotnet-sonarscanner begin /k:"jeisonsilva-github_codean" /o:"jeisonsilva-github" /d:sonar.cs.vscoveragexml.reportsPaths=coverage.xml /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
          dotnet build
          dotnet-coverage collect 'dotnet test' -f xml  -o 'coverage.xml'
          ..\.\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
        
        
